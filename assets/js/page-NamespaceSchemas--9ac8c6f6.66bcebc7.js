(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{489:function(e,n,r){"use strict";r.r(n);var t=r(2),s=Object(t.a)({},(function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"namespace-schemas"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#namespace-schemas"}},[e._v("#")]),e._v(" Namespace: Schemas")]),e._v(" "),r("p",[r("RouterLink",{attrs:{to:"/ts-api/modules/components.html"}},[e._v("Components")]),e._v(".Schemas")],1),e._v(" "),r("h2",{attrs:{id:"type-aliases"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#type-aliases"}},[e._v("#")]),e._v(" Type aliases")]),e._v(" "),r("h3",{attrs:{id:"challengedata"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#challengedata"}},[e._v("#")]),e._v(" ChallengeData")]),e._v(" "),r("p",[e._v("Ƭ  "),r("strong",[e._v("ChallengeData")]),e._v(": { id: string ; name: string ; rewards: { amount: number ; type: string  }[]  }[]")]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/zikeji/node-hypixel/blob/e8bab29/src/types/api.ts#L143",target:"_blank",rel:"noopener noreferrer"}},[e._v("src/types/api.ts:143"),r("OutboundLink")],1)])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"newsentries"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#newsentries"}},[e._v("#")]),e._v(" NewsEntries")]),e._v(" "),r("p",[e._v("Ƭ  "),r("strong",[e._v("NewsEntries")]),e._v(": "),r("RouterLink",{attrs:{to:"/ts-api/interfaces/components.schemas.newsentry.html"}},[e._v("NewsEntry")]),e._v("[]")],1),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/zikeji/node-hypixel/blob/e8bab29/src/types/api.ts#L270",target:"_blank",rel:"noopener noreferrer"}},[e._v("src/types/api.ts:270"),r("OutboundLink")],1)])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"player"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#player"}},[e._v("#")]),e._v(" Player")]),e._v(" "),r("p",[e._v("Ƭ  "),r("strong",[e._v("Player")]),e._v(": { [name:string]: boolean | number | string | unknown[] | unknown; _id: string ; achievementPoints?: number ; achievementRewardsNew?: { [name:string]: number;  } ; achievementSync?: { [name:string]: number;  } ; achievementTotem?: { [name:string]: boolean | number | string[] | unknown; allowed_max_height?: number ; canCustomize?: boolean ; selectedColors?: { [name:string]: string;  } ; selectedParts?: { [name:string]: string;  } ; unlockedColors?: string[] ; unlockedParts?: string[]  } ; achievementTracking?: string[] ; achievements?: { [name:string]: number;  } ; achievementsOneTime?: string[] ; adsense_tokens?: number ; auto_spawn_pet?: boolean ; battlePassGlowStatus?: boolean ; buildTeam?: boolean ; challenges?: { all_time?: { [name:string]: number;  }  } ; channel?: string ; chat?: boolean ; chatAlerts?: boolean ; coins?: number ; collectibles_menu_sort?: string ; compassStats?: { compass?: { battleground?: number ; prototype?: number ; skywars?: number  }  } ; cooldowns?: { fun?: { [name:string]: number;  }  } ; currentClickEffect?: string ; currentCloak?: string ; currentGadget?: string ; currentHat?: string ; currentIp?: string ; currentPet?: string ; customFilter?: string ; disableSendAll?: boolean ; disguise?: string ; displayname: string ; eugene?: { [name:string]: number | unknown; dailyTwoKExp?: number  } ; eulaCoins?: boolean ; fireworkStorage?: { colors?: string ; fade_colors?: string ; flight_duration?: number ; selected?: boolean ; shape?: string ; trail?: boolean ; twinkle?: boolean  }[] ; firstLogin: number ; flashingNewsOpens?: number ; flashingNewsPoppedUp?: number ; flashingNewsPopup?: string[] ; flashingSaleClicks?: number ; flashingSaleOpens?: number ; flashingSalePoppedUp?: number ; flashingSalePopup?: number ; fortuneBuff?: number ; friendInvisible?: boolean ; friendRequestsUuid?: string[] ; gadget?: string ; giftingMeta?: { [name:string]: unknown | null | number | string[]; bundlesGiven?: number ; bundlesReceived?: number ; giftsGiven?: number ; milestones?: string[] ; realBundlesGiven?: number ; realBundlesReceived?: number ; realBundlesReceivedInc?: number  } ; guildInvites?: string[] ; guildNotifications?: boolean ; housingMeta?: { packages?: string[]  } ; karma?: number ; knownAliases?: string[] ; knownAliasesLower?: string[] ; lastAdsenseGenerateTime?: number ; lastClaimedReward?: number ; lastLogin?: number ; lastLogout?: number ; levelUp_MVP_PLUS?: number ; levelUp_VIP?: number ; levelUp_VIP_PLUS?: number ; levelingReward_1?: boolean ; mcVersionRp?: string ; monthlyPackageRank?: string ; monthlyRankColor?: string ; monthlycrates?: { [name:string]: { [name:string]: boolean | unknown; MVP?: boolean ; REGULAR?: boolean ; VIP?: boolean ; VIP_PLUS?: boolean  };  } ; mostRecentGameType?: string ; mostRecentMinecraftVersion?: number ; mostRecentMonthlyPackageRank?: string ; mostRecentlyThanked?: string ; mostRecentlyThankedUuid?: string ; mostRecentlyTipped?: string ; mostRecentlyTippedUuid?: string ; networkExp?: number ; network_update_book?: string ; newPackageRank?: string ; notifications?: boolean ; notifiedOfStuff?: boolean ; onetime_achievement_menu_sort?: string ; onetime_achievement_menu_sort_completion_sort?: string ; outfit?: { BOOTS?: string ; CHESTPLATE?: string ; HELMET?: string ; LEGGINGS?: string  } ; packageRank?: string ; parkourCheckpointBests?: { [name:string]: { [name:string]: number;  };  } ; parkourCompletions?: { [name:string]: { timeStart: number ; timeTook: number  }[];  } ; particlePack?: string ; petConsumables?: { [name:string]: number;  } ; petJourneyTimestamp?: number ; petStats?: { [name:string]: { EXERCISE?: { timestamp: number ; value: number  } ; HUNGER?: { timestamp: number ; value: number  } ; THIRST?: { timestamp: number ; value: number  } ; experience?: number  };  } ; petUpdate?: number ; playername: string ; prefix?: string ; questSettings?: { [name:string]: boolean;  } ; quests?: { [name:string]: unknown;  } ; quickjoin_timestamp?: number ; quickjoin_uses?: number ; rank?: string ; rankPlusColor?: string ; reverted?: boolean ; rewardConsumed?: boolean ; rewardHighScore?: number ; rewardScore?: number ; rewardStreak?: number ; seeRequests?: boolean ; settings?: { [name:string]: boolean | string | unknown; allowFriendRequests?: boolean ; allowPartyRequests?: boolean ; autoSpawnPet?: boolean ; bloodVisibility?: boolean ; chatVisibility?: boolean ; duelInvitePrivacy?: string ; friendRequestPrivacy?: string ; legacyCompass?: boolean ; lobbyProtection?: boolean ; lobbySpeed?: boolean ; partyInvitePrivacy?: string ; petVisibility?: boolean ; privateMessageSounds?: boolean  } ; socialMedia?: { [name:string]: string | boolean | unknown; DISCORD?: string ; TWITTER?: string ; links?: { [name:string]: string | unknown; DISCORD?: string ; HYPIXEL?: string ; TWITTER?: string  } ; prompt?: boolean  } ; spec_first_person?: boolean ; spectators_invisible?: boolean ; stats?: { Arcade?: { [name:string]: number | boolean | unknown; coins?: number  } ; Bedwars?: { [name:string]: boolean | number | unknown; Experience?: number ; bedwars_boxes?: number  } ; BuildBattle?: { [name:string]: number | unknown; wins?: number ; wins_solo_normal?: number  } ; GingerBread?: { [name:string]: string | number | unknown; coins?: number ; packages?: string[]  } ; Legacy?: { [name:string]: number | unknown; next_tokens_seconds?: number ; paintball_tokens?: number ; quakecraft_tokens?: number ; tokens?: number ; total_tokens?: number  } ; MCGO?: { coins?: number  } ; MurderMystery?: { [name:string]: number | unknown; coins?: number ; coins_pickedup?: number ; coins_pickedup_MURDER_CLASSIC?: number ; coins_pickedup_skyway_pier?: number ; coins_pickedup_skyway_pier_MURDER_CLASSIC?: number ; detective_chance?: number ; games?: number ; games_MURDER_CLASSIC?: number ; games_skyway_pier?: number ; games_skyway_pier_MURDER_CLASSIC?: number ; murderer_chance?: number ; murdermystery_books?: string[] ; wins?: number ; wins_MURDER_CLASSIC?: number ; wins_skyway_pier?: number ; wins_skyway_pier_MURDER_CLASSIC?: number  } ; Paintball?: { [name:string]: number | string | boolean | unknown; coins?: number ; deaths?: number ; favorite_slots?: string ; kills?: number ; packages?: string[] ; shots_fired?: number ; showKillPrefix?: boolean ; wins?: number  } ; Pit?: { profile?: { renown?: number  }  } ; Quake?: { [name:string]: number | boolean | unknown; alternative_gun_cooldown_indicator?: boolean ; coins?: number ; compass_selected?: boolean ; deaths?: number ; distance_travelled?: number ; enable_sound?: boolean ; headshots?: number ; highest_killstreak?: number ; instantRespawn?: boolean ; kills?: number ; packages?: string[] ; shots_fired?: number ; showDashCooldown?: boolean ; showKillPrefix?: boolean  } ; SkyBlock?: { profiles?: { [name:string]: { cute_name?: string ; profile_id?: string  };  }  } ; SkyWars?: { packages?: string[] ; souls?: number  } ; TrueCombat?: { [name:string]: number | unknown; coins?: number ; deaths?: number ; games?: number ; losses?: number ; packages?: string[] ; survived_players?: number ; win_streak?: number  } ; VampireZ?: { updated_stats?: boolean  }  } ; thanksReceived?: number ; thanksSent?: number ; timePlaying?: number ; totalDailyRewards?: number ; totalRewards?: number ; tournamentTokens?: number ; tourney?: { first_join_lobby?: number ; quake_solo2_0?: { first_game?: number ; games_played?: number ; playtime?: number ; tributes_earned?: number  } ; total_tributes?: number  } ; transformation?: string ; userLanguage?: string ; uuid: string ; vanityConvertedBoxToday?: number ; vanityCraftedBoxToday?: number ; vanityFavorites?: string ; vanityFirstConvertedBox?: number ; vanityFirstCraftedBox?: number ; vanityMeta?: { packages?: string[]  } ; votesMissed?: number ; voting?: { [name:string]: number;  } ; wardrobe?: string  } | null")]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/zikeji/node-hypixel/blob/e8bab29/src/types/api.ts#L288",target:"_blank",rel:"noopener noreferrer"}},[e._v("src/types/api.ts:288"),r("OutboundLink")],1)])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"questdataarray"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#questdataarray"}},[e._v("#")]),e._v(" QuestDataArray")]),e._v(" "),r("p",[e._v("Ƭ  "),r("strong",[e._v("QuestDataArray")]),e._v(": { description: string ; id: string ; name: string ; objectives: { id: string ; integer?: number ; type: string  }[] ; requirements: { type: string  }[] ; rewards: { amount?: number ; package?: string ; type: string  }[]  }[]")]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/zikeji/node-hypixel/blob/e8bab29/src/types/api.ts#L664",target:"_blank",rel:"noopener noreferrer"}},[e._v("src/types/api.ts:664"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);n.default=s.exports}}]);